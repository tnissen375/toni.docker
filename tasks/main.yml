---
# source: https://docs.docker.com/engine/install/ubuntu/
- name: Ensure Prequisitions for Docker are met
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: present

- name: Ensure Docker Key is present
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Ensure Docker Repository is present
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release | lower }} stable
    state: present
 
- name: Ensure Docker is installed
  apt:
    name:
      "{{ item }}"
    state: present
  loop:
    "{{ docker_apt_packages }}"

- name: Ensure that pip docker packages
  pip:
    name: "{{ item }}"
    state: latest
  loop:
    "{{ docker_pip_packages }}"

- name: create docker group
  become: true
  group:
    name: docker
    state: present

- name: Ensure Users are in Docker group
  when: users|length>0
  user:
    name: '{{ item.name }}'
    groups: docker
    append: yes
    state: present
    with_items: '{{ users }}'
 
- name: Install Docker
  when: docker_network_driver is defined and docker_network_driver=="overlay"
  include_role: { name: atosatto.docker-swarm } 
  vars:
    skip_docker_py: True
    skip_docker_compose: True
    docker_swarm_interface: "wg0"

- include_tasks: "create_network.yml"

- name: Setup node_exporter
  import_tasks: monitoring.yml
  when: configure_monitoring|bool


# - name: Get info on docker containers
#   when: force_images|default(false)
#   docker_host_info:
#     containers: yes
#     containers_filters:  
#       #ancestor: "{{ image_openresty }}"
#       name: openresty
#   register: docker_image_info

# - name: Stop running containers
#   when: force_images|default(false)
#   docker_container:
#     name: "{{ item }}"
#     state: stopped
#   loop: "{{ docker_image_info.containers | map(attribute='Id') | list }}"  